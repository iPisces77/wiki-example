<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wiki.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    <!--@Table wikidev.`user`-->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="password" jdbcType="CHAR" property="password"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, login_name, `name`, `password`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from wikidev.`user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete
    from wikidev.`user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    insert into wikidev.`user` (id, login_name, `name`,
    `password`)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{password,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    insert into wikidev.`user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    update wikidev.`user`
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    update wikidev.`user`
    set login_name = #{loginName,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    `password` = #{password,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update wikidev.`user`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="login_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.loginName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=CHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update wikidev.`user`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="login_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.loginName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.loginName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.password != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=CHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into wikidev.`user`
    (id, login_name, `name`, `password`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.loginName,jdbcType=VARCHAR},
      #{item.name,jdbcType=VARCHAR},
      #{item.password,jdbcType=CHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    insert into wikidev.`user`
    (id, login_name, `name`, `password`)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{password,jdbcType=CHAR})
    on duplicate key update id = #{id,jdbcType=BIGINT},
    login_name = #{loginName,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    `password` = #{password,jdbcType=CHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.example.wiki.domain.User">
    <!--@mbg.generated-->
    insert into wikidev.`user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>

  <select id="list" resultMap="BaseResultMap">
    select id, login_name, name, password
    from wikidev.user u
    <where>
      <if test="request != null">
        <if test="request.loginName != null and request.loginName != ''">
          and name like concat('%', #{request.loginName}, '%')
        </if>
      </if>
    </where>
  </select>

  <select id="selectByLoginName" resultMap="BaseResultMap">
    select id, login_name, `name`, `password`
    from wikidev.user u
    where login_name = #{loginName,jdbcType=VARCHAR}
    limit 1
  </select>
</mapper>